{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amore\\\\Desktop\\\\jadeauto\\\\jadeauto\\\\client\\\\src\\\\components\\\\AppRouter.js\";\nimport React from 'react';\nimport { Routes, Route, Navigate } from \"react-router-dom\";\nimport { authRoutes, publicRoutes } from \"../routes\";\nimport { JADE_ROUTE } from \"../utils/consts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AppRouter = () => {\n  const isAuth = false;\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [isAuth && authRoutes.map(_ref => {\n      let {\n        path,\n        Component\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: path,\n        element: /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 52\n        }, this),\n        exact: true\n      }, path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this);\n    }), publicRoutes.map(_ref2 => {\n      let {\n        path,\n        Component\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: path,\n        element: /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 56\n        }, this),\n        exact: true\n      }, path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(Navigate, {\n        replace: true,\n        to: \"/home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 38\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n\n_c = AppRouter;\nexport default AppRouter;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppRouter\");","map":{"version":3,"sources":["C:/Users/Amore/Desktop/jadeauto/jadeauto/client/src/components/AppRouter.js"],"names":["React","Routes","Route","Navigate","authRoutes","publicRoutes","JADE_ROUTE","AppRouter","isAuth","map","path","Component"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,KAAhB,EAAuBC,QAAvB,QAAsC,kBAAtC;AACA,SAAQC,UAAR,EAAmBC,YAAnB,QAAsC,WAAtC;AACA,SAAQC,UAAR,QAAyB,iBAAzB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACpB,QAAMC,MAAM,GAAG,KAAf;AACA,sBACI,QAAC,MAAD;AAAA,eACKA,MAAM,IAAIJ,UAAU,CAACK,GAAX,CAAe;AAAA,UAAC;AAACC,QAAAA,IAAD;AAAOC,QAAAA;AAAP,OAAD;AAAA,0BAC1B,QAAC,KAAD;AAAkB,QAAA,IAAI,EAAED,IAAxB;AAA8B,QAAA,OAAO,eAAE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,gBAAvC;AAAqD,QAAA,KAAK;AAA1D,SAAYA,IAAZ;AAAA;AAAA;AAAA;AAAA,cAD0B;AAAA,KAAf,CADf,EAKKL,YAAY,CAACI,GAAb,CAAiB;AAAA,UAAC;AAACC,QAAAA,IAAD;AAAOC,QAAAA;AAAP,OAAD;AAAA,0BACd,QAAC,KAAD;AAAkB,QAAA,IAAI,EAAED,IAAxB;AAA8B,QAAA,OAAO,eAAE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,gBAAvC;AAAqD,QAAA,KAAK;AAA1D,SAAYA,IAAZ;AAAA;AAAA;AAAA;AAAA,cADc;AAAA,KAAjB,CALL,eAQI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,OAAO,eAAE,QAAC,QAAD;AAAU,QAAA,OAAO,MAAjB;AAAkB,QAAA,EAAE,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAdD;;KAAMH,S;AAgBN,eAAeA,SAAf","sourcesContent":["import React from 'react';\r\nimport {Routes ,Route, Navigate} from \"react-router-dom\";\r\nimport {authRoutes,publicRoutes} from \"../routes\";\r\nimport {JADE_ROUTE} from \"../utils/consts\";\r\n\r\nconst AppRouter = () => {\r\n    const isAuth = false\r\n    return (\r\n        <Routes>\r\n            {isAuth && authRoutes.map(({path, Component}) =>\r\n            <Route key={path} path={path} element={<Component/>} exact/>\r\n            )}\r\n\r\n            {publicRoutes.map(({path, Component}) =>\r\n                <Route key={path} path={path} element={<Component/>} exact/>\r\n            )}\r\n            <Route path=\"/\" element={<Navigate replace to=\"/home\" />} />\r\n        </Routes>\r\n    );\r\n};\r\n\r\nexport default AppRouter;"]},"metadata":{},"sourceType":"module"}