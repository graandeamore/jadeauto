{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amore\\\\Desktop\\\\jadeauto\\\\jadeauto\\\\client\\\\src\\\\components\\\\AppRouter.js\";\nimport React from 'react';\nimport { Routes, Route, Redirect } from \"react-router-dom\";\nimport { authRoutes, publicRoutes } from \"../routes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AppRouter = () => {\n  const isAuth = false;\n  return /*#__PURE__*/_jsxDEV(Route, {\n    children: [isAuth && authRoutes.map(_ref => {\n      let {\n        path,\n        Component\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: path,\n        component: /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 54\n        }, this),\n        exact: true\n      }, path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }, this);\n    }), publicRoutes.map(_ref2 => {\n      let {\n        path,\n        Component\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: path,\n        component: /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 58\n        }, this),\n        exact: true\n      }, path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n\n_c = AppRouter;\nexport default AppRouter;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppRouter\");","map":{"version":3,"sources":["C:/Users/Amore/Desktop/jadeauto/jadeauto/client/src/components/AppRouter.js"],"names":["React","Routes","Route","Redirect","authRoutes","publicRoutes","AppRouter","isAuth","map","path","Component"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,KAAhB,EAAuBC,QAAvB,QAAsC,kBAAtC;AACA,SAAQC,UAAR,EAAmBC,YAAnB,QAAsC,WAAtC;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACpB,QAAMC,MAAM,GAAG,KAAf;AACA,sBACI,QAAC,KAAD;AAAA,eACKA,MAAM,IAAIH,UAAU,CAACI,GAAX,CAAe;AAAA,UAAC;AAACC,QAAAA,IAAD;AAAOC,QAAAA;AAAP,OAAD;AAAA,0BAC1B,QAAC,KAAD;AAAkB,QAAA,IAAI,EAAED,IAAxB;AAA8B,QAAA,SAAS,eAAE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,gBAAzC;AAAuD,QAAA,KAAK;AAA5D,SAAYA,IAAZ;AAAA;AAAA;AAAA;AAAA,cAD0B;AAAA,KAAf,CADf,EAIKJ,YAAY,CAACG,GAAb,CAAiB;AAAA,UAAC;AAACC,QAAAA,IAAD;AAAOC,QAAAA;AAAP,OAAD;AAAA,0BACd,QAAC,KAAD;AAAkB,QAAA,IAAI,EAAED,IAAxB;AAA8B,QAAA,SAAS,eAAE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,gBAAzC;AAAuD,QAAA,KAAK;AAA5D,SAAYA,IAAZ;AAAA;AAAA;AAAA;AAAA,cADc;AAAA,KAAjB,CAJL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAZD;;KAAMH,S;AAcN,eAAeA,SAAf","sourcesContent":["import React from 'react';\r\nimport {Routes ,Route, Redirect} from \"react-router-dom\";\r\nimport {authRoutes,publicRoutes} from \"../routes\";\r\n\r\nconst AppRouter = () => {\r\n    const isAuth = false\r\n    return (\r\n        <Route>\r\n            {isAuth && authRoutes.map(({path, Component}) =>\r\n            <Route key={path} path={path} component={<Component/>} exact/>\r\n            )}\r\n            {publicRoutes.map(({path, Component}) =>\r\n                <Route key={path} path={path} component={<Component/>} exact/>\r\n            )}\r\n        </Route>\r\n    );\r\n};\r\n\r\nexport default AppRouter;"]},"metadata":{},"sourceType":"module"}